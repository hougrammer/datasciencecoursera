d[d$Ozone == 7,]
d[d$Ozone == 7,]
d[1]
d[1,]
d[2,]
d[d$Ozone]
d[d$Ozone,]
good
d$Ozone == 7
d[False,]
d[False]
d[d$Ozone == 7]
d[d$Ozone == 7,]
d
d[!is.na(d#Ozone)]
d[!is.na(d#Ozone),]
d[!is.na(d$Ozone),]
goodOzone = d[!is.na(d$Ozone)]
goodOzone = d[!is.na(d$Ozone),]
goodOzone
goodOzone[$Ozone > 7]
goodOzone[goodOzone$Ozone > 31 and goodOzone$Temp > 90]
goodOzone[goodOzone$Ozone > 31 && goodOzone$Temp > 90]
goodOzone$Ozone > 31 && goodOzone$Temp > 90
goodOzone$Ozone > 31
goodOzone$Temp > 90
true && true
True && True
TRUE && TRUE
c(TRUE, TRUE) && c(TRUE, FALSE)
c(TRUE, TRUE) & c(TRUE, FALSE)
goodOzone$Ozone > 31 & goodOzone$Temp > 90
goodOzone[goodOzone$Ozone > 31 & goodOzone$Temp > 90]
goodOzone[goodOzone$Ozone > 31 & goodOzone$Temp > 90,]
mean(goodOzone[goodOzone$Ozone > 31 & goodOzone$Temp > 90,]$Solar.R)
d[d$Month == 6]
d[d$Month == 6,]
mean(d[d$Month == 6,]$Temp)
max(c(1,2,3))
max(d$Ozone)
max(goodOzone[goodOzone$Month == 5]$Ozone)
max(goodOzone[goodOzone$Month == 5,]$Ozone)
cbind(c(1,3, 5), c(3, 2, 10))
1:4 + 2:3
class(1:4 + 2:3)
install.packages('swirl')
library(swirl)
rm(list=ls())
swirl()
5+7
x = 5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
z,555
c(z, 555, z)
z*2 + 100
my_sqrt = sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
(z*2 + 1000)
z*2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
list.files(())
list.files(
)
?list.files
args(list.files())
args(list.files
)
old.dir <= getwd()
old.dir <- getwd()
dir.create('testdir')
setwd('testdir/')
file.create('mytest.R')
ls()
dir()
file.exists(('mytest.R'))
file.exists('mytest.R')
file.info('mytest.R')
file.rename('mytest.R', 'mytest2.R')
file.copy('mytest2.R', 'mytest3.R')
file.path('mytest3.R')
args(file.path)
file.path('folder1', 'folder2')
?dir.create
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
1:20
pi:20
pi:10.
15:1
?`:`
seq(1,20)
seq(0,10,by=.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
c(.5, 55, -10, 6)
num_vect <- c(.5, 55, -10, 6)
tf = num_vect < 1
tf <- num_vect < 1
tf
num_vect >= 6
my_car <- c('My', 'name', 'is')
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = ' ')
my_name = c(my_char, 'David')
my_name
paste(my_name, collapse = ' ')
paste('Hello', 'world!', sep = ' ')
paste(1:3, c('X', 'Y', 'Z'), sep = '')
'a':'z'
paste(letters, 1:4, sep='-')
paste(LETTERS, 1:4, sep='-')
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
inf-inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect
)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect['bar']
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_v
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(nrow=4, ncol=5)
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients = c("Bill", "Gina", "Kelly", "Sean")
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)
colnames(my_data) <- cnames
my_data
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
apply(unique_vals, function(elem) elem[2])
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data(iris)
?iris
iris
tapply(iris$Sepal.Length, iris$Species, mean)
iris$Species
?tapply
rowMeans(iris[, 1:4])
head(iris)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
?apply
data("mtcars")
head(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
sapply(mtcars, cyl, mean)
split(mtcars, mtcars$cyl)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$mpg, mtcars$cyl)
head(mtcars)
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429-82.63636
debug(ls)
ls()
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
letters
LETTERS
sample(LETTERS)
flips = sample(c(0,1), 100, prob = c(.3, .7))
flips = sample(c(0,1), 100, prob = c(.3, .7), replace = TRUE)
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = .7)
flips2 <- rbinom(1, size = 100, prob = .7)
flips2 <- rbinom(100, size = 1, prob = .7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = 'Speed')
plot(x = cars$speed, y = cars$dist, xlab = 'Speed', ylab = 'Stopping Distance')
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = 'Speed', ylab = 'Stopping Distance')
plot(cars, main = 'My Plot')
plot(cars, title = 'My Plot Subtitle')
plot(cars, sub = 'My Plot Subtitle')
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch=2)
data("mtcars")
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
dir
dir()
setwd('week4/')
dir()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
str(outcome)
outcome[,11] = as.numeric(outcome[,11])
hist(outcome[,11])
names(outcome)
stop('here')
is.null(0)
is.null(NULL)
?order
order(c(1,2,3))
order(c(1,2,0))
order(c(1,2,0,NA))
df = outcome
rm(outcome)
o = order(df$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
o = order(df[,11])
head(df[o])
head(df[o,])
head(df[o,11])
df[11]
names(df[11])
o = order(df[11], df[2])
head(df[0])[2]
head(df[0])[,2]
head(df[0])
head(df)
head(df)[2]
df[1,2]
source('C:/cygwin64/home/David/RProgramming/week4/best.R')
best('CA', 'heart attack', df)
source('C:/cygwin64/home/David/RProgramming/week4/best.R')
best('CA', 'heart attack', df)
source('C:/cygwin64/home/David/RProgramming/week4/best.R')
best('CA', 'heart attack', df)
?find
?position
?Position
Position(1, c(2,1,3))
?match
'CA' %in% df
'CA' %in% df$State
match('CA', df$State)
df[,270]$State
df[270,]$State
match('', df$State)
source('C:/cygwin64/home/David/RProgramming/week4/best.R')
best('CA', 'heart attack', df)
source('C:/cygwin64/home/David/RProgramming/week4/best.R')
best('CA', 'heart attack', df)
best('NY', 'heart attack', df)
source('C:/cygwin64/home/David/RProgramming/week4/best.R')
best('NY', 'heart attack', df)
best('CA', 'heart attack', df)
source('C:/cygwin64/home/David/RProgramming/week4/best.R')
best('TX', 'heart failure')
source('C:/cygwin64/home/David/RProgramming/week4/best.R')
best('TX', 'heart failure')
?tryCatch
source('C:/cygwin64/home/David/RProgramming/week4/best.R')
best('TX', 'heart failure')
source('C:/cygwin64/home/David/RProgramming/week4/best.R')
best('TX', 'heart failure')
source('C:/cygwin64/home/David/RProgramming/week4/best.R')
best('TX', 'heart failure')
source('C:/cygwin64/home/David/RProgramming/week4/best.R')
best('TX', 'heart failure')
source('C:/cygwin64/home/David/RProgramming/week4/best.R')
best('TX', 'heart failure')
best("MD", "heart attack", df)
best("MD", "pneumonia", df)
source('C:/cygwin64/home/David/RProgramming/week4/best.R')
best("MD", "pneumonia", df)
best("MD", "pneumonia")
source('C:/cygwin64/home/David/RProgramming/week4/best.R')
best("MD", "pneumonia")
source('C:/cygwin64/home/David/RProgramming/week4/best.R')
best("MD", "pneumonia")
best('TX', 'heart failure')
best('TX', 'heart attack')
source('C:/cygwin64/home/David/RProgramming/week4/rankhospital.R')
source('C:/cygwin64/home/David/RProgramming/week4/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('C:/cygwin64/home/David/RProgramming/week4/rankhospital.R')
rankhospital("TX", "heart failure", 4)
df[!is.na(df[colnum]) & df$State == state]
df[!is.na(df[11]) & df$State == state]
df[!is.na(df[11]) & df$State == 'TX']
!is.na(df[11])
A = c(1,2,3,NA)
!is.na(A)
A[!is.na(A)]
source('C:/cygwin64/home/David/RProgramming/week4/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('C:/cygwin64/home/David/RProgramming/week4/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('C:/cygwin64/home/David/RProgramming/week4/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('C:/cygwin64/home/David/RProgramming/week4/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('C:/cygwin64/home/David/RProgramming/week4/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('C:/cygwin64/home/David/RProgramming/week4/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
source('C:/cygwin64/home/David/RProgramming/week4/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
source('C:/cygwin64/home/David/RProgramming/week4/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
for(s in df$State) print(s)
data.frame('ab', 'cd')
data.frame(row.names = c('ab', 'cd')
)
data.frame(col.names = c('ab', 'cd')
)
?data.frame
data.frame(state=character(), hospital=character())
data.frame(row.names = unique(df$State))
data.frame(row.names = unique(df$State, incomparables = c(NA)))
unique(df$State)
length(unique(df$State))
A = data.frame(ncol = 2)
A
A = data.frame(matrix(ncol = 2, nrow = 0))
A
A = data.frame(a = character(), b = character())
A
A[rowname,] = c('x', 'y')
A['rowname',] = c('x', 'y')
source('C:/cygwin64/home/David/RProgramming/week4/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/cygwin64/home/David/RProgramming/week4/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/cygwin64/home/David/RProgramming/week4/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/cygwin64/home/David/RProgramming/week4/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/cygwin64/home/David/RProgramming/week4/rankall.R')
head(rankall("heart attack", 20), 10)
sort(c(3,2,1))
source('C:/cygwin64/home/David/RProgramming/week4/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/cygwin64/home/David/RProgramming/week4/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/cygwin64/home/David/RProgramming/week4/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/cygwin64/home/David/RProgramming/week4/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/cygwin64/home/David/RProgramming/week4/rankall.R')
head(rankall("heart attack", 20), 10)
A = data.frame(hospital = character(length(allstates)), state = character(length(allstates)), row.names = allstates)
allstates = sort(unique(df$State))
A = data.frame(hospital = character(length(allstates)), state = character(length(allstates)), row.names = allstates)
A
A['CA',]
A[CA,]
for (s in allstates) print(A[s,])
for (s in allstates) A[s,] = c('a','b')
warnings()
A['AK',] = c('a', 'b')
A['AK',]
source('C:/cygwin64/home/David/RProgramming/week4/rankall.R')
source('C:/cygwin64/home/David/RProgramming/week4/rankall.R')
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
tail(rankall("heart failure"), 10)
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)

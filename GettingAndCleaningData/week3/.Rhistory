getwd()
ls
ls()
dir()
dir()
cd ~
cd(~)
cd
dir()
setwd
setwd(~)
setwd('~')
dir
dir()
con = url('http://biostat.jhsph.edu/~jleek/contact.html')
mylines = readLines(con)
mylines[1]
mylines[2]
length(mylines[2])
sum(sapply(mylines[c(10, 20, 30, 100)], sum))
sum(sapply(mylines[c(10, 20, 30, 100)], length))
length(mylines[1])
nchar(mylines[1])
nchar(mylines[2])
sapply(mylines[c(10, 20, 30, 100)], nchar)
sapply(mylines[c(10, 20, 30, 100)], nchar, simplify = TRUE)
sum(sapply(mylines[c(10, 20, 30, 100)], nchar))
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
head(x)
head(x[4])
sum(x[4])
ncol(x)
class(x)
sum(x[,4])
x <- read.fwf(
file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,
widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
head(x)
sum(x[4])
library(swirl)
rm(list = ls())
install_from_swirl("Getting and Cleaning Data")
swirl()
read.csv(path2csv, stringsAsFactors = FALSE)
mydf = read.csv(path2csv, stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion('dplyr')
cran <- tbl_df(mydf)
rm('mydf')
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
select(cran, -X:size)
-5:20
-(5:20)
select(cran, -(X:size)
)
filter(cran, package == 'swirl')
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 | r_os = 'linux-gnu')
filter(cran, size > 100500 | r_os == 'linux-gnu')
filter(cran, size > 100500, r_os == 'linux-gnu')
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
play()
class(cran)
cran
unique(cran)
unique(cran[r_os])
unique(cran$r_os)
nxt()
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size_mb / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size - 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm(mydf)
rm('mydf')
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
by_package
cran
submit()
pack_sum
quantile(pack_sum$count, probs = .99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count)
)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
gather(students2, sex_class, count, -grade)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c('sex', 'class'))
submit()
students3
submit()
submit()
?spread
submit()
submit()
students3
submit()
library(readr)
parse_number('class5')
submit()
mutate(students3, class = parse_number(class))
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>%
mutate(class = parse_number(class))
print
submit()
students4
submit()
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = 'passed')
failed <- mutate(failed, status = 'failed')
bind_rows(passed, failed)
sat
submit()
submit()
?read.csv
getwd()
setwd('C:/cygwin64/home/David/datascience/course3/')
getwd()
dir.create('week3')
setwd('week3')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv', 'q1.csv')
df = read.csv('q1.csv')
head(df)
ans = df[df$ACR == 3 & df$AGS == 6]
ans = df[df$ACR == 3 & df$AGS == 6,]
which(ans)
ans = df$ACR == 3 & df$AGS == 6
which(ans)
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg', 'q2.jpg')
jpeg()
plot(jpeg())
d = jpeg('q2.jpg', native = TRUE)
d = jpeg('q2.jpg')
d
install.packages('jpeg')
library(jpeg)
jpeg::readJPEG('q2.jpg', native = TRUE)
mode = 'wb'
?readJPEG
rm(mode)
d = readJPEG('q2.jpg', native = TRUE)
rm(d)
d = readJPEG('q2.jpg', native = TRUE)
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg', 'q2.jpg', mode = 'wb')
d = readJPEG('q2.jpg', native = TRUE)
d
?quantile
quantile(d, c(30, 80))
quantile(d, c(.30, 8.0))
quantile(d, c(.30, .80))
rm(list = ls())
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv', 'q3_1.csv')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv', 'q3_2.csv')
df1 = read.csv('q3_1.csv')
df2 = read.csv('q3_2.csv')
head(df1)
head(df1)
head(df2)
df1 = read.csv('q3_1.csv', skip = 6)
head(df1)
df1 = read.csv('q3_1.csv', skip = 3)
head(df1)
names(df1)
names(df2)
names(df1)[1] = 'CountryCode'
names(df1)
df1 = df1[, c('CountryCode', 'Ranking', 'Economy', 'US.dollars.')]
head(df1)
names(df1)
names(df1)[4] = 'USDollars'
head(df1)
str(df1)
df1$Ranking = as.numeric(df1$Ranking)
join = merge(df1, df2, by = 'CountryCode')
names(join)
sorted = join[order(Ranking)]
sorted = join[order(-join$Ranking)]
sorted = join[order(-join$Ranking),]
sorted[13,]
head(sorted)
tail(df1)
join = merge(df1, df2, by = 'CountryCode', sort = TRUE)
head(join)
is.na(join$CountryCode)
tail(join)
order(join$Ranking)
join[order(join$Ranking),]
join[order(join$Ranking), Ranking]
join[order(join$Ranking), join$Ranking]
join[order(join$Ranking), 'Ranking']
sorted = join[order(join$Ranking), ]
head(sorted)
join = merge(df1, df2, by = 'CountryCode', sort = TRUE, all = FALSE)
sorted = join[order(join$Ranking), ]
head(sorted)
df1 = read.csv('q3_1.csv')
names(df1)
head(df1)
df1 = df1[!is.na(df1$Ranking)]
df1 = df1[!is.na(df1$Ranking), c('CountryCode', 'Ranking', 'Economy', 'MillionUSDollars')]
head(df1)
join = merge(df1, df2, by = 'CountryCode')
sorted = join[order(-join$Ranking),]
sorted[13]
sorted[13,]
library(dplyr)
t = tbl_df(join)
t
sorted = arrange(t, desc(Ranking))
sorted
sorted[13,]
grouped = group_by(sorted, Income.Group)
grouped
grouped
summarise(grouped, mean(Ranking))
t
short = select(t, Countrycode, Ranking, Long.Name, Income.Group)
short = select(t, CountryCode, Ranking, Long.Name, Income.Group)
short
short = arrange(short, Ranking)
short
short
quantile(short$Ranking, seq(0, 1, by = .2))
filtered_short = filter(short, Income.Group = 'Lower middle income')
filtered_short = filter(short, Income.Group == 'Lower middle income')
filtered_short
filtered_short = filter(short, Income.Group == 'Lower middle income' & Ranking <= 38)
filtered_short

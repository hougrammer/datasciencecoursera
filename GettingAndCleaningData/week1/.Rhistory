d[47,]$Ozone
d[is.na(d)]
d[!is.na(d)]
d[!is.na(d),]
d$Ozone
d$Ozone[is.na]
d$Ozone[is.na(d$Ozone)]
count(d$Ozone[is.na(d$Ozone)])
length(d$Ozone[is.na(d$Ozone)])
mean(d$Ozone)
good = d$Ozone[!is.na(d$Ozone)]
mean(good)
d[Ozone >10]
d[$Ozone >10]
d[d$Ozone >10]
d[d$Ozone >10,]
d
d[d$Ozone == 7]
d[d$Ozone == 7,]
d[d$Ozone == 7,]
d[1]
d[1,]
d[2,]
d[d$Ozone]
d[d$Ozone,]
good
d$Ozone == 7
d[False,]
d[False]
d[d$Ozone == 7]
d[d$Ozone == 7,]
d
d[!is.na(d#Ozone)]
d[!is.na(d#Ozone),]
d[!is.na(d$Ozone),]
goodOzone = d[!is.na(d$Ozone)]
goodOzone = d[!is.na(d$Ozone),]
goodOzone
goodOzone[$Ozone > 7]
goodOzone[goodOzone$Ozone > 31 and goodOzone$Temp > 90]
goodOzone[goodOzone$Ozone > 31 && goodOzone$Temp > 90]
goodOzone$Ozone > 31 && goodOzone$Temp > 90
goodOzone$Ozone > 31
goodOzone$Temp > 90
true && true
True && True
TRUE && TRUE
c(TRUE, TRUE) && c(TRUE, FALSE)
c(TRUE, TRUE) & c(TRUE, FALSE)
goodOzone$Ozone > 31 & goodOzone$Temp > 90
goodOzone[goodOzone$Ozone > 31 & goodOzone$Temp > 90]
goodOzone[goodOzone$Ozone > 31 & goodOzone$Temp > 90,]
mean(goodOzone[goodOzone$Ozone > 31 & goodOzone$Temp > 90,]$Solar.R)
d[d$Month == 6]
d[d$Month == 6,]
mean(d[d$Month == 6,]$Temp)
max(c(1,2,3))
max(d$Ozone)
max(goodOzone[goodOzone$Month == 5]$Ozone)
max(goodOzone[goodOzone$Month == 5,]$Ozone)
cbind(c(1,3, 5), c(3, 2, 10))
1:4 + 2:3
class(1:4 + 2:3)
install.packages('swirl')
library(swirl)
rm(list=ls())
swirl()
5+7
x = 5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
z,555
c(z, 555, z)
z*2 + 100
my_sqrt = sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
(z*2 + 1000)
z*2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
list.files(())
list.files(
)
?list.files
args(list.files())
args(list.files
)
old.dir <= getwd()
old.dir <- getwd()
dir.create('testdir')
setwd('testdir/')
file.create('mytest.R')
ls()
dir()
file.exists(('mytest.R'))
file.exists('mytest.R')
file.info('mytest.R')
file.rename('mytest.R', 'mytest2.R')
file.copy('mytest2.R', 'mytest3.R')
file.path('mytest3.R')
args(file.path)
file.path('folder1', 'folder2')
?dir.create
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
1:20
pi:20
pi:10.
15:1
?`:`
seq(1,20)
seq(0,10,by=.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
c(.5, 55, -10, 6)
num_vect <- c(.5, 55, -10, 6)
tf = num_vect < 1
tf <- num_vect < 1
tf
num_vect >= 6
my_car <- c('My', 'name', 'is')
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = ' ')
my_name = c(my_char, 'David')
my_name
paste(my_name, collapse = ' ')
paste('Hello', 'world!', sep = ' ')
paste(1:3, c('X', 'Y', 'Z'), sep = '')
'a':'z'
paste(letters, 1:4, sep='-')
paste(LETTERS, 1:4, sep='-')
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
inf-inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect
)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect['bar']
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_v
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(nrow=4, ncol=5)
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients = c("Bill", "Gina", "Kelly", "Sean")
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)
colnames(my_data) <- cnames
my_data
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
apply(unique_vals, function(elem) elem[2])
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data(iris)
?iris
iris
tapply(iris$Sepal.Length, iris$Species, mean)
iris$Species
?tapply
rowMeans(iris[, 1:4])
head(iris)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
?apply
data("mtcars")
head(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
sapply(mtcars, cyl, mean)
split(mtcars, mtcars$cyl)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$mpg, mtcars$cyl)
head(mtcars)
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429-82.63636
debug(ls)
ls()
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
letters
LETTERS
sample(LETTERS)
flips = sample(c(0,1), 100, prob = c(.3, .7))
flips = sample(c(0,1), 100, prob = c(.3, .7), replace = TRUE)
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = .7)
flips2 <- rbinom(1, size = 100, prob = .7)
flips2 <- rbinom(100, size = 1, prob = .7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = 'Speed')
plot(x = cars$speed, y = cars$dist, xlab = 'Speed', ylab = 'Stopping Distance')
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = 'Speed', ylab = 'Stopping Distance')
plot(cars, main = 'My Plot')
plot(cars, title = 'My Plot Subtitle')
plot(cars, sub = 'My Plot Subtitle')
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch=2)
data("mtcars")
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
getwd()
setwd(..)
setwd(\..)
setwd(../)
setwd('..')
setwd('datascience/course3/')
mkdir('week1')
setwd('week1/')
?download.file
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv', 'data.csv')
d = read.csv('data.csv')
str(d)
d[d$VAL >= 1e6]
length(d[d$VAL >= 1e6,])
d[d$VAL >= 1e6,]
d[!is.na(d$VAL) & d$VAL >= 1e6,]
head(d$VAL)
d[!is.na(d$VAL) & d$VAL == 24,]
length(d[!is.na(d$VAL) & d$VAL == 24,])
str(d)
sum(d$VAL == 24)
sum(d[d$VAL == 24])
sum(d[d$VAL == 24,])
sum(d[!is.na(d$VAL) & d$VAL == 24,])
!is.na(d$VAL) & d$VAL == 24
sum(!is.na(d$VAL) & d$VAL == 24)
length(d[!is.na(d$VAL) & d$VAL == 24])
length(d[!is.na(d$VAL) & d$VAL == 24,])
head(d[!is.na(d$VAL) & d$VAL == 24,])
nrow(d[!is.na(d$VAL) & d$VAL == 24,])
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx', 'gas.xlsx')
library(xlsx)
install.packages("xlsx")
library(xlsx)
read.xlsx('gas.xlsx', 1)
dat = read.xlsx('gas.xlsx', 1)
dat = read.xlsx('gas.xlsx')
dat = read.xlsx('gas.xlsx', sheetIndex = 1)
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx', 'gas.xlsx')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx', 'gas.xlsx', mode = 'wb')
dat = read.xlsx('gas.xlsx', sheetIndex = 1)
head(dat)
sum(dat$Zip*dat$Ext,na.rm=T)
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml', 'restaurant.xml')
library(XML)
install.packages("XML")
library(XML)
d = xmlParse('restaurant.xml')
head(d)
d
head(d)
d
print(d)
root = xmlRoot(d)
root
root[1]
root[[1]]
d = xmlTreeParse('restaurant.xml')
root = xmlRoot(d)
xmlName(root)
names(root)
root[1]
root[[1]]
length(root)
length(root[[1]])
length(root[1])
length(root[[1]][[1]])
root[[1]][[1]]
xmlValue(root)
xmlValue(root[[1]][[1]])
xmlValue(root[[1]][[1]][[1]])
xmlName(root[[1]][[1]][[1]])
xmlName(root[[1]][[1]][[2]])
xpathSApply(root, '//name', xmlValue)
?xpathSApply
?xmlTreeParse
xmlSApply(root, xmlValue)
class(root)
download.file('https://www.w3schools.com/xml/simple.xml', 'simple.xml')
d = xmlTreeParse('restaurant.xml', useInternalNodes = TRUE)
root = xmlRoot(d)
root
class(root)
root[1]
root[1][1]
root[[1]][[1]]
xmlSApply(root, '//name', xmlName)
xmlName(root)
els = getNodeSet(root, '//row')
class(els)
els
els = getNodeSet(root, '//zipcode')
length(els)
els[1]
xmlValue(els[1])
xmlValue(els[[1]])
head(els == '21231')
ans = els[els=='21231']
sum(els == '21231')
class(els)
str(els)
els[[1]]
xmlSApply(els, function(x)xmlSApply(x, xmlValue))
xmlSApply(els, xmlValue)
clasS(xmlSApply(els, xmlValue))
class(xmlSApply(els, xmlValue))
ans = xmlSApply(els, xmlValue)
zips = xmlSApply(els, xmlValue)
rm(ans)
length(zips)
length(zips[zips == '21231'])
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv', 'housing.csv')
install.packages("data.table")
library(data.table)
DT = fread('housing.csv')
pwgtp15
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time({rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]})
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
rowMeans(DT)[DT$SEX==1]
class(DT$SEX)
as.numeric(DT$SEX)
rowMeans(DT)
str(DT)
head(DT)
mean(DT$pwgtp15,by=DT$SEX)
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(replicate(n = 100, expr = mean(DT$pwgtp15,by=DT$SEX)))
system.time(replicate(n = 10000, expr = mean(DT$pwgtp15,by=DT$SEX)))
t2 = system.time(replicate(n = 10000, expr = mean(DT$pwgtp15,by=DT$SEX)))
t2
t3 = system.time(replicate(n = 10000, expr = tapply(DT$pwgtp15,DT$SEX,mean)))
t3
t4 = system.time(replicate(n = 10000, expr = sapply(split(DT$pwgtp15,DT$SEX),mean)))
t4
t5 = system.time(replicate(n = 10000, expr = mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)))
t5 = system.time(replicate(n = 10000, expr = {mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)}))
t6 = system.time(replicate(n = 10000, expr = DT[,mean(pwgtp15),by=SEX])
)
t6
rowMeans(as.numeric(DT))
rowMeans(as.numeric(DT$pwgtp15))
mean(as.numeric(DT$pwgtp15))
?rowMeans
dat
sum(dat$Zip*dat$Ext,na.rm=T)
dat$Zip
str(dat)
dat = read.xlsx('gas.xlsx', sheetIndex = 1 rowIndex = 18:23, colIndex = 7:15)
dat = read.xlsx('gas.xlsx', sheetIndex = 1, rowIndex = 18:23, colIndex = 7:15)
sum(dat$Zip*dat$Ext,na.rm=T)
t1 = system.time(replicate(100, tapply(DT$pwgtp15,DT$SEX,mean)))
t1
t2 = system.time(replicate(100, DT[,mean(pwgtp15),by=SEX]))
t2
t1 = system.time(replicate(1000, tapply(DT$pwgtp15,DT$SEX,mean)))
t2 = system.time(replicate(1000, DT[,mean(pwgtp15),by=SEX]))
t2
t1
t3 = system.time(replicate(1000, {mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)}))
rm(t3)
t4 = system.time(replicate(1000, sapply(split(DT$pwgtp15,DT$SEX),mean)))
t4
t5 = system.time(replicate(1000, mean(DT$pwgtp15,by=DT$SEX)))
t5
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
head(DT)
